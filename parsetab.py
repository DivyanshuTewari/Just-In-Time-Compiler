
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDleftEQNEleftLTLEGTGEleftPLUSMINUSleftMULDIVrightNOTnonassocLPARENRPARENAND BOOL DIV ELSE EQ EQUALS GE GT IDENTIFIER IF LE LPAREN LT MINUS MUL NE NOT NUMBER OR PLUS RPAREN SEMICOLON STRINGprogram : statement\n               | statement programstatement : assignment\n                 | expression SEMICOLON\n                 | expressionassignment : IDENTIFIER EQUALS expression SEMICOLONexpression : IF LPAREN expression RPAREN expression ELSE expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIV expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expressionexpression : NOT expressionexpression : factorfactor : BOOLfactor : NUMBERfactor : IDENTIFIERfactor : STRINGfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IDENTIFIER':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[5,5,-3,-5,-24,30,30,-21,-22,-23,-25,-4,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,30,30,-7,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[6,6,-3,-5,-24,6,6,-21,-22,-23,-25,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,6,6,-7,]),'NOT':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[8,8,-3,-5,-24,8,8,-21,-22,-23,-25,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,8,8,-7,]),'BOOL':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[10,10,-3,-5,-24,10,10,-21,-22,-23,-25,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,10,10,-7,]),'NUMBER':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[11,11,-3,-5,-24,11,11,-21,-22,-23,-25,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,11,11,-7,]),'STRING':([0,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[12,12,-3,-5,-24,12,12,-21,-22,-23,-25,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,12,12,-7,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,],[7,7,-3,-5,-24,28,7,7,-21,-22,-23,-25,-4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,7,7,-7,]),'$end':([1,2,3,4,5,9,10,11,12,13,14,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,51,],[0,-1,-3,-5,-24,-21,-22,-23,-25,-2,-4,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-6,-7,]),'SEMICOLON':([4,5,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,51,],[14,-24,-21,-22,-23,-25,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,47,-26,-7,]),'PLUS':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[15,-24,-21,-22,-23,-25,15,-24,-20,-8,-9,-10,-11,15,15,15,15,15,15,15,15,15,15,-26,15,15,]),'MINUS':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[16,-24,-21,-22,-23,-25,16,-24,-20,-8,-9,-10,-11,16,16,16,16,16,16,16,16,16,16,-26,16,16,]),'MUL':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[17,-24,-21,-22,-23,-25,17,-24,-20,17,17,-10,-11,17,17,17,17,17,17,17,17,17,17,-26,17,17,]),'DIV':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[18,-24,-21,-22,-23,-25,18,-24,-20,18,18,-10,-11,18,18,18,18,18,18,18,18,18,18,-26,18,18,]),'AND':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[19,-24,-21,-22,-23,-25,19,-24,-20,-8,-9,-10,-11,-12,19,-14,-15,-16,-17,-18,-19,19,19,-26,19,19,]),'OR':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[20,-24,-21,-22,-23,-25,20,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,20,20,-26,20,20,]),'EQ':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[21,-24,-21,-22,-23,-25,21,-24,-20,-8,-9,-10,-11,21,21,-14,-15,-16,-17,-18,-19,21,21,-26,21,21,]),'NE':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[22,-24,-21,-22,-23,-25,22,-24,-20,-8,-9,-10,-11,22,22,-14,-15,-16,-17,-18,-19,22,22,-26,22,22,]),'LT':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[23,-24,-21,-22,-23,-25,23,-24,-20,-8,-9,-10,-11,23,23,23,23,-16,-17,-18,-19,23,23,-26,23,23,]),'GT':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[24,-24,-21,-22,-23,-25,24,-24,-20,-8,-9,-10,-11,24,24,24,24,-16,-17,-18,-19,24,24,-26,24,24,]),'LE':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[25,-24,-21,-22,-23,-25,25,-24,-20,-8,-9,-10,-11,25,25,25,25,-16,-17,-18,-19,25,25,-26,25,25,]),'GE':([4,5,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,],[26,-24,-21,-22,-23,-25,26,-24,-20,-8,-9,-10,-11,26,26,26,26,-16,-17,-18,-19,26,26,-26,26,26,]),'EQUALS':([5,],[27,]),'RPAREN':([9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,51,],[-21,-22,-23,-25,46,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,48,-26,-7,]),'ELSE':([9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,49,51,],[-21,-22,-23,-25,-24,-20,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,50,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,13,]),'statement':([0,2,],[2,2,]),'assignment':([0,2,],[3,3,]),'expression':([0,2,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,50,],[4,4,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,51,]),'factor':([0,2,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,28,48,50,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','IfElseSupport.py',104),
  ('program -> statement program','program',2,'p_program','IfElseSupport.py',105),
  ('statement -> assignment','statement',1,'p_statement','IfElseSupport.py',110),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','IfElseSupport.py',111),
  ('statement -> expression','statement',1,'p_statement','IfElseSupport.py',112),
  ('assignment -> IDENTIFIER EQUALS expression SEMICOLON','assignment',4,'p_assignment','IfElseSupport.py',116),
  ('expression -> IF LPAREN expression RPAREN expression ELSE expression','expression',7,'p_expression_ifelse','IfElseSupport.py',120),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','IfElseSupport.py',124),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','IfElseSupport.py',125),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','IfElseSupport.py',126),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','IfElseSupport.py',127),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','IfElseSupport.py',128),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','IfElseSupport.py',129),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','IfElseSupport.py',130),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','IfElseSupport.py',131),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','IfElseSupport.py',132),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','IfElseSupport.py',133),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','IfElseSupport.py',134),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','IfElseSupport.py',135),
  ('expression -> NOT expression','expression',2,'p_expression_unop','IfElseSupport.py',139),
  ('expression -> factor','expression',1,'p_expression_factor','IfElseSupport.py',143),
  ('factor -> BOOL','factor',1,'p_factor_bool','IfElseSupport.py',147),
  ('factor -> NUMBER','factor',1,'p_factor_number','IfElseSupport.py',151),
  ('factor -> IDENTIFIER','factor',1,'p_factor_identifier','IfElseSupport.py',155),
  ('factor -> STRING','factor',1,'p_factor_string','IfElseSupport.py',159),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','IfElseSupport.py',163),
]
